{"ast":null,"code":"var _jsxFileName = \"/home/bateman/projects/webSocketClient/src/index.js\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { message } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket('wss://salty-dawn-74239.herokuapp.com');\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      messages: []\n    };\n    this.onButtonClicked = value => {\n      client.send(JSON.stringify({\n        type: \"message\",\n        msg: value\n      }));\n    };\n  }\n  componentDidMount() {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected!\");\n    };\n    client.onmessage = message => {\n      //const dataFromServer = JSON.parse(message.data);\n      console.log('got reply: ', message.data);\n      this.setState(state => ({\n        messages: [...this.state.messages, {\n          msg: message.data.msg\n        }]\n      }));\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onButtonClicked(\"frente\"),\n        children: \" Para frente \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onButtonClicked(\"tras\"),\n        children: \" Para tras \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onButtonClicked(\"auto\"),\n        children: \" AUTO \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), this.state.messages.map(msg => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"message: \", msg.msg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 49\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"names":["ReactDOM","React","Component","w3cwebsocket","W3CWebSocket","message","client","App","state","messages","onButtonClicked","value","send","JSON","stringify","type","msg","componentDidMount","onopen","console","log","onmessage","data","setState","render","map","document","getElementById"],"sources":["/home/bateman/projects/webSocketClient/src/index.js"],"sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { message } from \"antd\";\n\nconst client = new W3CWebSocket('wss://salty-dawn-74239.herokuapp.com');\n\nexport default class App extends Component  {\n\n    state = {\n        messages: []\n    }\n\n    onButtonClicked = (value) => {\n        client.send(JSON.stringify({\n            type: \"message\",\n            msg: value\n        }));\n    }\n\n    componentDidMount(){\n        client.onopen = () => {\n            console.log(\"WebSocket Client Connected!\");\n        };\n        client.onmessage = (message) => {\n            //const dataFromServer = JSON.parse(message.data);\n            console.log('got reply: ', message.data);\n            this.setState((state) => ({\n                messages: [...this.state.messages,\n                {\n                    msg: message.data.msg\n                }]\n            }))\n        }\n\n    }\n    render() {\n        return (\n            <div>\n                <button onClick={() => this.onButtonClicked(\"frente\")}> Para frente </button>\n                <button onClick={() => this.onButtonClicked(\"tras\")}> Para tras </button>\n                <button onClick={() => this.onButtonClicked(\"auto\")}> AUTO </button>\n                {this.state.messages.map(msg => <p>message: {msg.msg}</p>)}\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,IAAIC,YAAY,QAAQ,WAAW;AACxD,SAASC,OAAO,QAAQ,MAAM;AAAC;AAE/B,MAAMC,MAAM,GAAG,IAAIF,YAAY,CAAC,sCAAsC,CAAC;AAEvE,eAAe,MAAMG,GAAG,SAASL,SAAS,CAAE;EAAA;IAAA;IAAA,KAExCM,KAAK,GAAG;MACJC,QAAQ,EAAE;IACd,CAAC;IAAA,KAEDC,eAAe,GAAIC,KAAK,IAAK;MACzBL,MAAM,CAACM,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACvBC,IAAI,EAAE,SAAS;QACfC,GAAG,EAAEL;MACT,CAAC,CAAC,CAAC;IACP,CAAC;EAAA;EAEDM,iBAAiB,GAAE;IACfX,MAAM,CAACY,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;IACDd,MAAM,CAACe,SAAS,GAAIhB,OAAO,IAAK;MAC5B;MACAc,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEf,OAAO,CAACiB,IAAI,CAAC;MACxC,IAAI,CAACC,QAAQ,CAAEf,KAAK,KAAM;QACtBC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ,EACjC;UACIO,GAAG,EAAEX,OAAO,CAACiB,IAAI,CAACN;QACtB,CAAC;MACL,CAAC,CAAC,CAAC;IACP,CAAC;EAEL;EACAQ,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACd,eAAe,CAAC,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eAC7E;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACA,eAAe,CAAC,MAAM,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eACzE;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACA,eAAe,CAAC,MAAM,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,EACnE,IAAI,CAACF,KAAK,CAACC,QAAQ,CAACgB,GAAG,CAACT,GAAG,iBAAI;QAAA,wBAAaA,GAAG,CAACA,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD;EAEd;AACJ;AAEAhB,QAAQ,CAACwB,MAAM,eAAC,QAAC,GAAG;EAAA;EAAA;EAAA;AAAA,QAAG,EAAEE,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}